version: "3.3"
services:
  mvn:
    image: maven:3.6.3-openjdk-17
    container_name: mvn
    working_dir: ${PWD}
    environment:
      ENABLE_TESTS: "${ENABLE_TESTS}"
      ENABLE_CODE_COVERAGE: "${ENABLE_CODE_COVERAGE}"
      ENABLE_MUTATION_COVERAGE: "${ENABLE_MUTATION_COVERAGE}"
      ENABLE_CHECKSTYLE: "${ENABLE_CHECKSTYLE}"
      ENABLE_VERSION_BUMP: "${ENABLE_VERSION_BUMP}"
      ENABLE_SONARQUBE: "${ENABLE_SONARQUBE}"
      ENABLE_DEPENDENCY_CHECK: "${ENABLE_DEPENDENCY_CHECK}"
      ENABLE_SPOTBUGS: "${ENABLE_SPOTBUGS}"
      SPOTBUGS_FAIL_ON_ERROR: "${SPOTBUGS_FAIL_ON_ERROR}"
      ENABLE_FORMATTING: "${ENABLE_FORMATTING}"
      APP_URL: "${APP_URL}"
      SONARQUBE_HOST_URL: "${SONARQUBE_HOST_URL}"
      SONARQUBE_LOGIN: "${SONARQUBE_LOGIN}"
      SONARQUBE_PROJECT_KEY: "${SONARQUBE_PROJECT_KEY}"
      NVD_API_KEY: "${NVD_API_KEY}"
      ENABLE_OPENAPI_SPEC_GENERATION: "${ENABLE_OPENAPI_SPEC_GENERATION}"
    volumes:
      - ${PWD}:${PWD}
      - ${HOME}/.m2/:/root/.m2

  helm:
    image: alpine/helm:3.9.2
    container_name: helm
    working_dir: ${PWD}
    network_mode: "host" # Hack: This is needed so the helm can access the host's minikube IP
    environment:
      KUBECONFIG: ${KUBECONFIG}
      HOME: ${HOME}
    volumes:
      - ${PWD}:${PWD}
      - ${HOME}/.kube:${HOME}/.kube
      - ${HOME}/.minikube/:${HOME}/.minikube

  aws:
    image: amazon/aws-cli:2.7.20
    container_name: aws
    working_dir: /aws
    environment:
      AWS_REGION: ${AWS_REGION}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_SESSION_TOKEN: ${AWS_SESSION_TOKEN}